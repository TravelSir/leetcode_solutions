"""
解题思路:
这题我们可以分析每一个灯泡的变更次数来判断它是否开启
第一个灯泡只有在第1轮的时候才会操作到它，那它的操作次数是1
第二个灯泡会在第1轮和第2轮的时候操作到它，那它的操作次数是2
第三个灯泡会在第1轮和第3轮的时候操作到它，那它的操作次数是2
第四个灯泡会在第1轮和第2轮和第4轮的时候操作到它，操作次数是3
。。。
由此我们可以发现其实第n个灯泡被操作的次数就是它的约束个数
操作次数为奇数时灯泡是开启的
而只有完全平方数才有奇数个约数，所以直接求有多少个完全平方数即可
"""
import math


class Solution:
    def bulbSwitch(self, n):
        return math.floor(math.sqrt(n))


if __name__ == '__main__':
    print(Solution().bulbSwitch(4))
